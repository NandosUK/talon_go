/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// ApplicationAnalyticsDataPoint struct for ApplicationAnalyticsDataPoint
type ApplicationAnalyticsDataPoint struct {
	// The start of the aggregation time frame in UTC.
	StartTime *time.Time `json:"startTime,omitempty"`
	// The end of the aggregation time frame in UTC.
	EndTime            *time.Time                                       `json:"endTime,omitempty"`
	TotalRevenue       *ApplicationAnalyticsDataPointTotalRevenue       `json:"totalRevenue,omitempty"`
	SessionsCount      *ApplicationAnalyticsDataPointSessionsCount      `json:"sessionsCount,omitempty"`
	AvgItemsPerSession *ApplicationAnalyticsDataPointAvgItemsPerSession `json:"avgItemsPerSession,omitempty"`
	AvgSessionValue    *ApplicationAnalyticsDataPointAvgSessionValue    `json:"avgSessionValue,omitempty"`
	// The total value of discounts given for cart items in influenced sessions.
	TotalDiscounts *float32 `json:"totalDiscounts,omitempty"`
	// The number of times a coupon was successfully redeemed in influenced sessions.
	CouponsCount *float32 `json:"couponsCount,omitempty"`
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *ApplicationAnalyticsDataPoint) GetStartTime() time.Time {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAnalyticsDataPoint) GetStartTimeOk() (time.Time, bool) {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *ApplicationAnalyticsDataPoint) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *ApplicationAnalyticsDataPoint) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *ApplicationAnalyticsDataPoint) GetEndTime() time.Time {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAnalyticsDataPoint) GetEndTimeOk() (time.Time, bool) {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *ApplicationAnalyticsDataPoint) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *ApplicationAnalyticsDataPoint) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetTotalRevenue returns the TotalRevenue field value if set, zero value otherwise.
func (o *ApplicationAnalyticsDataPoint) GetTotalRevenue() ApplicationAnalyticsDataPointTotalRevenue {
	if o == nil || o.TotalRevenue == nil {
		var ret ApplicationAnalyticsDataPointTotalRevenue
		return ret
	}
	return *o.TotalRevenue
}

// GetTotalRevenueOk returns a tuple with the TotalRevenue field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAnalyticsDataPoint) GetTotalRevenueOk() (ApplicationAnalyticsDataPointTotalRevenue, bool) {
	if o == nil || o.TotalRevenue == nil {
		var ret ApplicationAnalyticsDataPointTotalRevenue
		return ret, false
	}
	return *o.TotalRevenue, true
}

// HasTotalRevenue returns a boolean if a field has been set.
func (o *ApplicationAnalyticsDataPoint) HasTotalRevenue() bool {
	if o != nil && o.TotalRevenue != nil {
		return true
	}

	return false
}

// SetTotalRevenue gets a reference to the given ApplicationAnalyticsDataPointTotalRevenue and assigns it to the TotalRevenue field.
func (o *ApplicationAnalyticsDataPoint) SetTotalRevenue(v ApplicationAnalyticsDataPointTotalRevenue) {
	o.TotalRevenue = &v
}

// GetSessionsCount returns the SessionsCount field value if set, zero value otherwise.
func (o *ApplicationAnalyticsDataPoint) GetSessionsCount() ApplicationAnalyticsDataPointSessionsCount {
	if o == nil || o.SessionsCount == nil {
		var ret ApplicationAnalyticsDataPointSessionsCount
		return ret
	}
	return *o.SessionsCount
}

// GetSessionsCountOk returns a tuple with the SessionsCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAnalyticsDataPoint) GetSessionsCountOk() (ApplicationAnalyticsDataPointSessionsCount, bool) {
	if o == nil || o.SessionsCount == nil {
		var ret ApplicationAnalyticsDataPointSessionsCount
		return ret, false
	}
	return *o.SessionsCount, true
}

// HasSessionsCount returns a boolean if a field has been set.
func (o *ApplicationAnalyticsDataPoint) HasSessionsCount() bool {
	if o != nil && o.SessionsCount != nil {
		return true
	}

	return false
}

// SetSessionsCount gets a reference to the given ApplicationAnalyticsDataPointSessionsCount and assigns it to the SessionsCount field.
func (o *ApplicationAnalyticsDataPoint) SetSessionsCount(v ApplicationAnalyticsDataPointSessionsCount) {
	o.SessionsCount = &v
}

// GetAvgItemsPerSession returns the AvgItemsPerSession field value if set, zero value otherwise.
func (o *ApplicationAnalyticsDataPoint) GetAvgItemsPerSession() ApplicationAnalyticsDataPointAvgItemsPerSession {
	if o == nil || o.AvgItemsPerSession == nil {
		var ret ApplicationAnalyticsDataPointAvgItemsPerSession
		return ret
	}
	return *o.AvgItemsPerSession
}

// GetAvgItemsPerSessionOk returns a tuple with the AvgItemsPerSession field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAnalyticsDataPoint) GetAvgItemsPerSessionOk() (ApplicationAnalyticsDataPointAvgItemsPerSession, bool) {
	if o == nil || o.AvgItemsPerSession == nil {
		var ret ApplicationAnalyticsDataPointAvgItemsPerSession
		return ret, false
	}
	return *o.AvgItemsPerSession, true
}

// HasAvgItemsPerSession returns a boolean if a field has been set.
func (o *ApplicationAnalyticsDataPoint) HasAvgItemsPerSession() bool {
	if o != nil && o.AvgItemsPerSession != nil {
		return true
	}

	return false
}

// SetAvgItemsPerSession gets a reference to the given ApplicationAnalyticsDataPointAvgItemsPerSession and assigns it to the AvgItemsPerSession field.
func (o *ApplicationAnalyticsDataPoint) SetAvgItemsPerSession(v ApplicationAnalyticsDataPointAvgItemsPerSession) {
	o.AvgItemsPerSession = &v
}

// GetAvgSessionValue returns the AvgSessionValue field value if set, zero value otherwise.
func (o *ApplicationAnalyticsDataPoint) GetAvgSessionValue() ApplicationAnalyticsDataPointAvgSessionValue {
	if o == nil || o.AvgSessionValue == nil {
		var ret ApplicationAnalyticsDataPointAvgSessionValue
		return ret
	}
	return *o.AvgSessionValue
}

// GetAvgSessionValueOk returns a tuple with the AvgSessionValue field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAnalyticsDataPoint) GetAvgSessionValueOk() (ApplicationAnalyticsDataPointAvgSessionValue, bool) {
	if o == nil || o.AvgSessionValue == nil {
		var ret ApplicationAnalyticsDataPointAvgSessionValue
		return ret, false
	}
	return *o.AvgSessionValue, true
}

// HasAvgSessionValue returns a boolean if a field has been set.
func (o *ApplicationAnalyticsDataPoint) HasAvgSessionValue() bool {
	if o != nil && o.AvgSessionValue != nil {
		return true
	}

	return false
}

// SetAvgSessionValue gets a reference to the given ApplicationAnalyticsDataPointAvgSessionValue and assigns it to the AvgSessionValue field.
func (o *ApplicationAnalyticsDataPoint) SetAvgSessionValue(v ApplicationAnalyticsDataPointAvgSessionValue) {
	o.AvgSessionValue = &v
}

// GetTotalDiscounts returns the TotalDiscounts field value if set, zero value otherwise.
func (o *ApplicationAnalyticsDataPoint) GetTotalDiscounts() float32 {
	if o == nil || o.TotalDiscounts == nil {
		var ret float32
		return ret
	}
	return *o.TotalDiscounts
}

// GetTotalDiscountsOk returns a tuple with the TotalDiscounts field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAnalyticsDataPoint) GetTotalDiscountsOk() (float32, bool) {
	if o == nil || o.TotalDiscounts == nil {
		var ret float32
		return ret, false
	}
	return *o.TotalDiscounts, true
}

// HasTotalDiscounts returns a boolean if a field has been set.
func (o *ApplicationAnalyticsDataPoint) HasTotalDiscounts() bool {
	if o != nil && o.TotalDiscounts != nil {
		return true
	}

	return false
}

// SetTotalDiscounts gets a reference to the given float32 and assigns it to the TotalDiscounts field.
func (o *ApplicationAnalyticsDataPoint) SetTotalDiscounts(v float32) {
	o.TotalDiscounts = &v
}

// GetCouponsCount returns the CouponsCount field value if set, zero value otherwise.
func (o *ApplicationAnalyticsDataPoint) GetCouponsCount() float32 {
	if o == nil || o.CouponsCount == nil {
		var ret float32
		return ret
	}
	return *o.CouponsCount
}

// GetCouponsCountOk returns a tuple with the CouponsCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAnalyticsDataPoint) GetCouponsCountOk() (float32, bool) {
	if o == nil || o.CouponsCount == nil {
		var ret float32
		return ret, false
	}
	return *o.CouponsCount, true
}

// HasCouponsCount returns a boolean if a field has been set.
func (o *ApplicationAnalyticsDataPoint) HasCouponsCount() bool {
	if o != nil && o.CouponsCount != nil {
		return true
	}

	return false
}

// SetCouponsCount gets a reference to the given float32 and assigns it to the CouponsCount field.
func (o *ApplicationAnalyticsDataPoint) SetCouponsCount(v float32) {
	o.CouponsCount = &v
}

type NullableApplicationAnalyticsDataPoint struct {
	Value        ApplicationAnalyticsDataPoint
	ExplicitNull bool
}

func (v NullableApplicationAnalyticsDataPoint) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableApplicationAnalyticsDataPoint) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
